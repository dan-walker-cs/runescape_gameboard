@layer base, difficulty, warp, state, live;

@layer base {
    /* Make the tile component fill its parent wrapper */
    :host {
        display: block;
        width: 100%;
        height: 100%;
    }

    /* The click target */
    .tile {
        position: relative;
        width: 100%;
        height: 100%;

        stroke: #ffffff; 
        stroke-width: 0.5em;
        stroke-linejoin: round;

        fill: #e6f3ff;

        cursor: pointer;
        clip-path: polygon(25% 0, 75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%);
        transition: fill 500ms, stroke 500ms;
    }

    /* SVG fills the box defined by the boardâ€™s wrapper (width/height) */
    .hex {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        display: block;
    }

    /* Icon centered within the hex */
    .tile__icon {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 60%;
        height: 60%;
        display: flex;
        align-items: center;
        justify-content: center;
        pointer-events: none;
    }

    .tile__icon img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    .tile__lock {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-25%, -90%);

        display: none;
        align-items: center;
        justify-content: center;

        background: none;

        z-index: 3;
        pointer-events: none; 
    }

    .tile__lock mat-icon {
        color: #fff !important;
    }
}

@layer difficulty {
    .tile.diff--none .hex .stroke {
        fill: #0e2e28;
        stroke: #12615a;
        stroke-width: 1em;
        fill-opacity: 100%;
        
    }

    .tile.diff--easy .hex .stroke {
        fill: #799f36;
        fill-opacity: 70%;
    }

    .tile.diff--med .hex .stroke {
        fill: #b16f33;
        fill-opacity: 70%;
    }

    .tile.diff--hard .hex .stroke {
        fill: #a5403f;
        fill-opacity: 70%;
    }
}

@layer state {
    :host(.complete) .tile .hex .stroke {
        fill: #12615a;
        fill-opacity: 100%;
        stroke: none;
    }

    :host(.complete) .tile .tile__icon img {
        filter: grayscale(100%);
        transition: filter .2s ease;
    }

    :host(.reserve) .tile .hex .stroke {
        stroke-width: 1em;
        fill: #0d6186;
    }

    :host(.reserve) .tile .tile__icon {
        filter: grayscale(100%);
        transition: filter .2s ease;
    }

    :host(.reserve) .tile__lock {
        display: flex;
    }
}

@layer warp {
    .tile.warp--l1 .hex .stroke {
        stroke: #39e339 !important;
        fill: #799f36;
        animation: strokePulse var(--pulse-dur, 3s) ease-in-out infinite;
    }

    .tile.warp--l2 .hex .stroke {
        stroke: #ff7b00 !important;
        fill: #b16f33;
        animation: strokePulse var(--pulse-dur, 3s) ease-in-out infinite;
    }

    .tile.warp--l3 .hex .stroke {
        stroke: #ff0051 !important;
        fill: #a5403f;
        animation: strokePulse var(--pulse-dur, 3s) ease-in-out infinite;
    }

    @keyframes strokePulse {
        0%, 100% { stroke-width: var(--min-stroke, 8); }
        50%      { stroke-width: var(--max-stroke, 20); }
    }
}

@layer live {
    .tile:hover .stroke { 
        stroke: #ffcc00 !important; 
        fill: #ffe9ae !important; 
    }

    :host(.select) .tile .stroke {
        stroke: #ffcc00 !important; 
        fill: #ffe9ae !important;
    }
}